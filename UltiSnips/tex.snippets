extends tex-templates

global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC', 'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES', 'AmsFS', 'AmsGS' ]]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" i
\ldots
endsnippet

snippet sc "Section" b
\section{${1:section name}}
\label{sub:${2:sectionlabel}}

${0}
endsnippet

snippet sub "Subsection" b


\subsection{${1:subsection name}}
\label{sub:${2:subsectionlabel}}

${0}
endsnippet

snippet ssub "Subsubsection" b
\subsubsection{${1:subsubsection name}}
\label{sub:${2:subsubsectionlabel}}

${0}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	${0:${VISUAL}}
	\end{tabular}
\end{table}
endsnippet

snippet ltable "Longtable environment" b
\begin{longtable}{${1:p{.5\textwidth}} ${2:p{.5\textwidth}}}
	\caption{${3:caption}} \\\
	\label{tab:${4:label}} \\\
	${0:${VISUAL}}
\end{longtable}
endsnippet


snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

######################
# Text Formatting #
#####################

snippet it "italic" i
\textit{${1:${VISUAL}}}$0
endsnippet

snippet bf "bold" i
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet ul "underline" i
\underline{${1:${VISUAL}}}$0
endsnippet

#End of Text Formatting

snippet ci "cite" i
\cite{${1:${VISUAL}}}$0
endsnippet

snippet cip "citep" i
\citep{${1:${VISUAL}}}$0
endsnippet

snippet re "cross-refference" i
\ref{${1:${VISUAL}}}$0
endsnippet


snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet


######################
# Beamer Persentation#
#####################
snippet fra "Frame" b
\begin{frame}[label=current]{${1:title}} \vspace{4pt}
$0
\end{frame}
endsnippet


snippet col "Columns" b
\begin{columns}[onlytextwidth]

\column{0.5\textwidth}
$1
\column{0.5\textwidth}
$0
\end{columns}
endsnippet

snippet gra "Featured" b
	\includegraphics[width=${1:0.4\textwidth}]{$2}\\\
		{\tiny \textcolor{digiPH_darkblue}{Sumber: ${3:Penulis}, \href{${4:https://creativecommons.org/licenses/by/3.0/at/}}{CC BY}}}
endsnippet

snippet cur "Current" i
[label=current]
endsnippet

# vim:ft=snippets
